{"version":3,"sources":["views/Reviews/Reviews.js"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReview","then","data","results","catch","error","console","warn","length","map","review","author","content","id"],"mappings":"kOAIe,SAASA,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KASA,OARAC,qBAAU,WACRC,YAAYN,GACTO,MAAK,SAACC,GACLJ,EAAWI,EAAKC,YAEjBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,KAAKF,QAChC,CAACX,IAGF,8BACGG,GAAWA,EAAQW,OAAS,EAC3B,6BACGX,EAAQY,KAAI,SAACC,GAAD,OACX,+BACE,yCAAYA,EAAOC,UACnB,4BAAID,EAAOE,YAFJF,EAAOG,SAOpB","file":"static/js/12.4aff1bc3.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchReview } from \"../../service/API/API\";\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  useEffect(() => {\n    fetchReview(movieId)\n      .then((data) => {\n        setReviews(data.results);\n      })\n      .catch((error) => console.warn(error));\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map((review) => (\n            <li key={review.id}>\n              <b>Author: {review.author}</b>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n}\n"],"sourceRoot":""}